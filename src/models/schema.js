export const schema = {
	models: {
		Owner: {
			name: 'Owner',
			fields: {
				id: {
					name: 'id',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				name: {
					name: 'name',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				phone: {
					name: 'phone',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				email: {
					name: 'email',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				clientID: {
					name: 'clientID',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				Client: {
					name: 'Client',
					isArray: false,
					type: {
						model: 'Client',
					},
					isRequired: false,
					attributes: [],
					association: {
						connectionType: 'BELONGS_TO',
						targetName: 'clientOwnersId',
					},
				},
				createdAt: {
					name: 'createdAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				updatedAt: {
					name: 'updatedAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
			},
			syncable: true,
			pluralName: 'Owners',
			attributes: [
				{
					type: 'model',
					properties: {},
				},
				{
					type: 'key',
					properties: {
						name: 'byClient',
						fields: ['clientID'],
					},
				},
				{
					type: 'auth',
					properties: {
						rules: [
							{
								allow: 'public',
								operations: ['create', 'update', 'delete', 'read'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['admins'],
								operations: ['read', 'create', 'update', 'delete'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['clients'],
								operations: ['read', 'update', 'create'],
							},
						],
					},
				},
			],
		},
		Client: {
			name: 'Client',
			fields: {
				id: {
					name: 'id',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				name: {
					name: 'name',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				phone: {
					name: 'phone',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				email: {
					name: 'email',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				website: {
					name: 'website',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				zipCode: {
					name: 'zipCode',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				state: {
					name: 'state',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				city: {
					name: 'city',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				street: {
					name: 'street',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				number: {
					name: 'number',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				Owners: {
					name: 'Owners',
					isArray: true,
					type: {
						model: 'Owner',
					},
					isRequired: false,
					attributes: [],
					isArrayNullable: true,
					association: {
						connectionType: 'HAS_MANY',
						associatedWith: 'clientID',
					},
				},
				Events: {
					name: 'Events',
					isArray: true,
					type: {
						model: 'Event',
					},
					isRequired: false,
					attributes: [],
					isArrayNullable: true,
					association: {
						connectionType: 'HAS_MANY',
						associatedWith: 'clientID',
					},
				},
				createdAt: {
					name: 'createdAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				updatedAt: {
					name: 'updatedAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
			},
			syncable: true,
			pluralName: 'Clients',
			attributes: [
				{
					type: 'model',
					properties: {},
				},
				{
					type: 'auth',
					properties: {
						rules: [
							{
								allow: 'public',
								operations: ['create', 'update', 'delete', 'read'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['admins'],
								operations: ['read', 'create', 'update', 'delete'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['clients'],
								operations: ['read', 'update', 'create'],
							},
						],
					},
				},
			],
		},
		Event: {
			name: 'Event',
			fields: {
				id: {
					name: 'id',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				referralCode: {
					name: 'referralCode',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				plan: {
					name: 'plan',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				name: {
					name: 'name',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				website: {
					name: 'website',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				email: {
					name: 'email',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				zipCode: {
					name: 'zipCode',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				state: {
					name: 'state',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				city: {
					name: 'city',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				street: {
					name: 'street',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				number: {
					name: 'number',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				description: {
					name: 'description',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				dates: {
					name: 'dates',
					isArray: true,
					type: 'String',
					isRequired: true,
					attributes: [],
					isArrayNullable: true,
				},
				clientID: {
					name: 'clientID',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				Client: {
					name: 'Client',
					isArray: false,
					type: {
						model: 'Client',
					},
					isRequired: false,
					attributes: [],
					association: {
						connectionType: 'BELONGS_TO',
						targetName: 'clientEventsId',
					},
				},
				partnerID: {
					name: 'partnerID',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				Partner: {
					name: 'Partner',
					isArray: false,
					type: {
						model: 'Partner',
					},
					isRequired: false,
					attributes: [],
					association: {
						connectionType: 'BELONGS_TO',
						targetName: 'partnerEventsId',
					},
				},
				Users: {
					name: 'Users',
					isArray: true,
					type: {
						model: 'User',
					},
					isRequired: false,
					attributes: [],
					isArrayNullable: true,
					association: {
						connectionType: 'HAS_MANY',
						associatedWith: 'eventID',
					},
				},
				createdAt: {
					name: 'createdAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				updatedAt: {
					name: 'updatedAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
			},
			syncable: true,
			pluralName: 'Events',
			attributes: [
				{
					type: 'model',
					properties: {},
				},
				{
					type: 'key',
					properties: {
						name: 'byClient',
						fields: ['clientID'],
					},
				},
				{
					type: 'key',
					properties: {
						name: 'byPartner',
						fields: ['partnerID'],
					},
				},
				{
					type: 'auth',
					properties: {
						rules: [
							{
								allow: 'public',
								operations: ['create', 'update', 'delete', 'read'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['admins'],
								operations: ['read', 'create', 'update', 'delete'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['clients'],
								operations: ['read', 'update', 'create'],
							},
						],
					},
				},
			],
		},
		Partner: {
			name: 'Partner',
			fields: {
				id: {
					name: 'id',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				name: {
					name: 'name',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				contact: {
					name: 'contact',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				email: {
					name: 'email',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				phone: {
					name: 'phone',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				referralCode: {
					name: 'referralCode',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				zipCode: {
					name: 'zipCode',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				state: {
					name: 'state',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				city: {
					name: 'city',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				street: {
					name: 'street',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				Events: {
					name: 'Events',
					isArray: true,
					type: {
						model: 'Event',
					},
					isRequired: false,
					attributes: [],
					isArrayNullable: true,
					association: {
						connectionType: 'HAS_MANY',
						associatedWith: 'partnerID',
					},
				},
				number: {
					name: 'number',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				createdAt: {
					name: 'createdAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				updatedAt: {
					name: 'updatedAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
			},
			syncable: true,
			pluralName: 'Partners',
			attributes: [
				{
					type: 'model',
					properties: {},
				},
				{
					type: 'auth',
					properties: {
						rules: [
							{
								allow: 'public',
								operations: ['create', 'update', 'delete', 'read'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['admins'],
								operations: ['read', 'create', 'update', 'delete'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['clients'],
								operations: ['read', 'update', 'create'],
							},
						],
					},
				},
			],
		},
		User: {
			name: 'User',
			fields: {
				id: {
					name: 'id',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				phone: {
					name: 'phone',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				code: {
					name: 'code',
					isArray: false,
					type: 'Int',
					isRequired: true,
					attributes: [],
				},
				confirmation: {
					name: 'confirmation',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				codeUsed: {
					name: 'codeUsed',
					isArray: false,
					type: 'String',
					isRequired: false,
					attributes: [],
				},
				eventID: {
					name: 'eventID',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				Event: {
					name: 'Event',
					isArray: false,
					type: {
						model: 'Event',
					},
					isRequired: false,
					attributes: [],
					association: {
						connectionType: 'BELONGS_TO',
						targetName: 'eventUsersId',
					},
				},
				userInfo: {
					name: 'userInfo',
					isArray: false,
					type: {
						model: 'UserInfo',
					},
					isRequired: false,
					attributes: [],
					association: {
						connectionType: 'HAS_ONE',
						associatedWith: 'User',
						targetName: 'userUserInfoId',
					},
				},
				createdAt: {
					name: 'createdAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				updatedAt: {
					name: 'updatedAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				userUserInfoId: {
					name: 'userUserInfoId',
					isArray: false,
					type: 'ID',
					isRequired: false,
					attributes: [],
				},
			},
			syncable: true,
			pluralName: 'Users',
			attributes: [
				{
					type: 'model',
					properties: {},
				},
				{
					type: 'key',
					properties: {
						name: 'byEvent',
						fields: ['eventID'],
					},
				},
				{
					type: 'auth',
					properties: {
						rules: [
							{
								allow: 'public',
								operations: ['create', 'update', 'delete', 'read'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['admins'],
								operations: ['read', 'create', 'update', 'delete'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['clients'],
								operations: ['read', 'update', 'create'],
							},
						],
					},
				},
			],
		},
		UserInfo: {
			name: 'UserInfo',
			fields: {
				id: {
					name: 'id',
					isArray: false,
					type: 'ID',
					isRequired: true,
					attributes: [],
				},
				phone: {
					name: 'phone',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				name: {
					name: 'name',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				email: {
					name: 'email',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				gender: {
					name: 'gender',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				state: {
					name: 'state',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				city: {
					name: 'city',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				birthdate: {
					name: 'birthdate',
					isArray: false,
					type: 'String',
					isRequired: true,
					attributes: [],
				},
				authorization: {
					name: 'authorization',
					isArray: false,
					type: 'Boolean',
					isRequired: true,
					attributes: [],
				},
				User: {
					name: 'User',
					isArray: false,
					type: {
						model: 'User',
					},
					isRequired: false,
					attributes: [],
					association: {
						connectionType: 'BELONGS_TO',
						targetName: 'userInfoUserId',
					},
				},
				createdAt: {
					name: 'createdAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
				updatedAt: {
					name: 'updatedAt',
					isArray: false,
					type: 'AWSDateTime',
					isRequired: false,
					attributes: [],
					isReadOnly: true,
				},
			},
			syncable: true,
			pluralName: 'UserInfos',
			attributes: [
				{
					type: 'model',
					properties: {},
				},
				{
					type: 'auth',
					properties: {
						rules: [
							{
								allow: 'public',
								operations: ['create', 'update', 'delete', 'read'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['admins'],
								operations: ['read', 'create', 'update', 'delete'],
							},
							{
								groupClaim: 'cognito:groups',
								provider: 'userPools',
								allow: 'groups',
								groups: ['clients'],
								operations: ['read', 'update', 'create'],
							},
						],
					},
				},
			],
		},
	},
	enums: {},
	nonModels: {},
	version: '52d3e745fac0ec435326b78f85440acf',
};
